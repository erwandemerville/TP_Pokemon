{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"TP Classes - Pok\u00e9mon Vous pouvez : Cliquer ici pour acc\u00e9der \u00e0 l' \u00e9nonc\u00e9 du TP en PDF . Cliquer ici pour t\u00e9l\u00e9charger le code \u00e0 trous du TP. Cliquer ici pour t\u00e9l\u00e9charger le corrig\u00e9 du TP. Cliquer ici pour tester le code en ligne . R\u00e9alisation d'un jeu Pok\u00e9mon Objectif du TP L'objectif de cette s\u00e9ance est de r\u00e9aliser, en Python , un jeu de type RPG. En particulier, on s'inspirera du jeu Pok\u00e9mon . Ce projet sera constitu\u00e9 des fichiers suivants : main.py - Programme principal permettant l'ex\u00e9cution du jeu jeu.py - Classe qui g\u00e8re l'ensemble du jeu et r\u00e9utilise les autres classes combat.py - Classe permettant de repr\u00e9senter un combat du jeu pokemon.py - Classe permettant de repr\u00e9senter les Pok\u00e9mons Voici une capture de ce que l'on souhaite obtenir : Pr\u00e9-requis Si n\u00e9cessaire, vous pouvez relire le cours sur les classes en cliquant ici . Les notions d' objets , d' attributs , de m\u00e9thodes , de constructeur notamment doivent vous \u00eatre famili\u00e8res. Mod\u00e9lisation Voici une mod\u00e9lisation sous forme de diagramme des diff\u00e9rentes classes constituant ce projet : Notes : Les donn\u00e9es sur les pok\u00e9mons sont stock\u00e9es dans un fichier pokemons.txt . L'inscription d'un pok\u00e9mon se fait de la mani\u00e8re suivante : Bulbizarre Plante,Poison 45 49 49 Charge,50 Rugissement,attaque-e,5 Vampigraine,drainage,3 Chaque donn\u00e9e est s\u00e9par\u00e9e par une tabulation . La premi\u00e8re ligne renseigne les donn\u00e9es principales sur le Pok\u00e9mon : Son nom , ses types , son nombre de vies , son attaque et enfin sa d\u00e9fense . La deuxi\u00e8me ligne contient les attaques du pok\u00e9mon . S'il s'agit d'une attaque qui inflige simplement des d\u00e9g\u00e2ts, on l'\u00e9crit sous la forme : Nom_de_lattaque,puissance (donc seulement deux \u00e9l\u00e9ments) S'il s'agit d'une attaque qui n'inflige pas de d\u00e9g\u00e2ts mais effectue une autre action, ou inflige une alt\u00e9ration d'\u00e9tat, on \u00e9crira sous la forme suivante (3 \u00e9l\u00e9ments) : Nom_attaque,poison,3 : Empoisonnement pendant 3 tours (par exemple) Nom_attaque,attaque+,10 : Augmenter de 10 points l'attaque du pok\u00e9mon alli\u00e9 Nom_attaque,defense-e,10 : Diminuer de 10 points la d\u00e9fense du pok\u00e9mon ennemi . Pour l'instant, il existe : poison : Empoisonner l'ennemi paralysie : Paralyser l'ennemi drainage : Drainer la vie de l'ennemi (m\u00eame effet que poison) attaque+, attaque-, defense+, defense- : Augmenter/Diminuer l'attaque ou la d\u00e9fense attaque-e, defense-e : Diminuer l'attaque ou la d\u00e9fense ennemie. Rien ne vous emp\u00eache de rajouter de nouveaux effets, si vous vous sentez capable de les rajouter dans le code. Les attaques de chaque Pokemon seront enregistr\u00e9es dans l'attribut _liste_attaques sous forme d'une liste de dictionnaires . Par exemple, s'il y a 2 attaques : [{\"nom_attaque\": \"Charge\", \"degats_attaque\": 35}, {\"nom_attaque\": \"Rugissement\", \"effet_attaque\": \"attaque-e\", \"valeur_attaque\": 5}] La premi\u00e8re attaque \"Charge\" a une puissance de 35 . La seconde attaque \"Rugissement\" diminue l'attaque de l'ennemi de 5 points . L'\u00e9tat du pok\u00e9mon sera stock\u00e9e sous la forme d'un dictionnaire . Initialement, l'attribut _etat sera \u00e9gal \u00e0 {\"nom_etat\": \"normal\"} => Cela indique que le pok\u00e9mon est dans son \u00e9tat normal . S'il est empoisonn\u00e9 par exemple, _etat sera \u00e9gal \u00e0 {\"nom_etat\": \"poison\", \"duree_etat\": 3} => Empoisonnement pendant encore 3 tours . (M\u00eame principe pour la paralysie , ou le drainage ). Vous pouvez ajouter de nouveaux pok\u00e9mons dans le fichier pokemons.txt , en respectant bien le format. Vous pouvez cr\u00e9er vos propres pok\u00e9mons ou vous inspirer du pok\u00e9dex : https://www.pokebip.com/pokedex/pokedex_5G_liste_des_pokemon.html R\u00e9alisation Ouvrez le dossier Projet_Pokemon . A l'int\u00e9rieur, vous trouverez des fichiers pr\u00e9-remplis, que vous devrez compl\u00e9ter. Les zones \u00e0 compl\u00e9tez sont marqu\u00e9es par des pointill\u00e9s ......... . Pensez \u00e0 \u00e9crire la docstring de vos fonctions. Certaines fonctions sont d\u00e9j\u00e0 enti\u00e8rement \u00e9crites , et il vous sera dans ce cas demand\u00e9 d' \u00e9crire la docstring pour v\u00e9rifier votre compr\u00e9hension. D'autres fonctions contiennent uniquement la docstring , qui vous aidera \u00e0 \u00e9crire le corps de la fonction. Lisez bien les docstrings et les commentaires pour vous assurer de bien comprendre le fonctionnement du projet ! D\u00e9roulement du jeu Le jeu, d\u00e9fini dans la classe Jeu , se d\u00e9roule ind\u00e9finiment et ne s'arr\u00eate que si : Tous les pok\u00e9mons du jeu sont morts Le nombre de victoires correspond \u00e0 la valeur de la variable globale NB_VICTOIRES Le nombre de d\u00e9faites correspond \u00e0 la valeur de la variable globale NB_DEFAITES Si aucune de ces conditions n'est remplie : On demande au joueur de choisir un pok\u00e9mon parmi les pok\u00e9mons encore vivants du jeu L'adversaire choisit un pok\u00e9mon de mani\u00e8re al\u00e9atoire On lance un combat . A la fin du combat, en cas de victoire, on incr\u00e9mente la valeur du nombre de victoires, en cas de d\u00e9faite, on incr\u00e9mente la valeur du nombre de d\u00e9faites. On recommence le m\u00eame d\u00e9roulement tant qu'aucune des 3 conditions d\u00e9finies pr\u00e9c\u00e9demment n'est remplie. D\u00e9roulement d'un combat Pour vous aider \u00e0 comprendre, voici une explication du d\u00e9roulement d'un combat (m\u00e9thode jouer de la classe Combat ) : On v\u00e9rifie si le pok\u00e9mon du joueur est mort . Si oui, fin du combat, avec un message de d\u00e9faite. Sinon, on v\u00e9rifie si le pok\u00e9mon de l'ennemi est mort . Si oui, fin du combat, avec message de victoire . Si aucun pok\u00e9mon n'est mort : On affiche les infos sur les pok\u00e9mon (points de vies, \u00e9tat, attaque, d\u00e9fense...) On active les effets relatifs aux alt\u00e9rations d'\u00e9tat. Si c'est au tour du joueur, le joueur choisit une attaque. Si c'est au tour du joueur adversaire, l'attaque est choisie al\u00e9atoirement. A la fin, on incr\u00e9mente le nombre de tours Questions ? Si vous avez des remarques ou des questions, vous pouvez me contacter \u00e0 l'adresse erwan.demerville.etu@univ-lille.fr","title":"Notes"},{"location":"#tp-classes-pokemon","text":"Vous pouvez : Cliquer ici pour acc\u00e9der \u00e0 l' \u00e9nonc\u00e9 du TP en PDF . Cliquer ici pour t\u00e9l\u00e9charger le code \u00e0 trous du TP. Cliquer ici pour t\u00e9l\u00e9charger le corrig\u00e9 du TP. Cliquer ici pour tester le code en ligne .","title":"TP Classes - Pok\u00e9mon"},{"location":"#realisation-dun-jeu-pokemon","text":"","title":"R\u00e9alisation d'un jeu Pok\u00e9mon"},{"location":"#objectif-du-tp","text":"L'objectif de cette s\u00e9ance est de r\u00e9aliser, en Python , un jeu de type RPG. En particulier, on s'inspirera du jeu Pok\u00e9mon . Ce projet sera constitu\u00e9 des fichiers suivants : main.py - Programme principal permettant l'ex\u00e9cution du jeu jeu.py - Classe qui g\u00e8re l'ensemble du jeu et r\u00e9utilise les autres classes combat.py - Classe permettant de repr\u00e9senter un combat du jeu pokemon.py - Classe permettant de repr\u00e9senter les Pok\u00e9mons Voici une capture de ce que l'on souhaite obtenir :","title":"Objectif du TP"},{"location":"#pre-requis","text":"Si n\u00e9cessaire, vous pouvez relire le cours sur les classes en cliquant ici . Les notions d' objets , d' attributs , de m\u00e9thodes , de constructeur notamment doivent vous \u00eatre famili\u00e8res.","title":"Pr\u00e9-requis"},{"location":"#modelisation","text":"Voici une mod\u00e9lisation sous forme de diagramme des diff\u00e9rentes classes constituant ce projet : Notes : Les donn\u00e9es sur les pok\u00e9mons sont stock\u00e9es dans un fichier pokemons.txt . L'inscription d'un pok\u00e9mon se fait de la mani\u00e8re suivante : Bulbizarre Plante,Poison 45 49 49 Charge,50 Rugissement,attaque-e,5 Vampigraine,drainage,3 Chaque donn\u00e9e est s\u00e9par\u00e9e par une tabulation . La premi\u00e8re ligne renseigne les donn\u00e9es principales sur le Pok\u00e9mon : Son nom , ses types , son nombre de vies , son attaque et enfin sa d\u00e9fense . La deuxi\u00e8me ligne contient les attaques du pok\u00e9mon . S'il s'agit d'une attaque qui inflige simplement des d\u00e9g\u00e2ts, on l'\u00e9crit sous la forme : Nom_de_lattaque,puissance (donc seulement deux \u00e9l\u00e9ments) S'il s'agit d'une attaque qui n'inflige pas de d\u00e9g\u00e2ts mais effectue une autre action, ou inflige une alt\u00e9ration d'\u00e9tat, on \u00e9crira sous la forme suivante (3 \u00e9l\u00e9ments) : Nom_attaque,poison,3 : Empoisonnement pendant 3 tours (par exemple) Nom_attaque,attaque+,10 : Augmenter de 10 points l'attaque du pok\u00e9mon alli\u00e9 Nom_attaque,defense-e,10 : Diminuer de 10 points la d\u00e9fense du pok\u00e9mon ennemi . Pour l'instant, il existe : poison : Empoisonner l'ennemi paralysie : Paralyser l'ennemi drainage : Drainer la vie de l'ennemi (m\u00eame effet que poison) attaque+, attaque-, defense+, defense- : Augmenter/Diminuer l'attaque ou la d\u00e9fense attaque-e, defense-e : Diminuer l'attaque ou la d\u00e9fense ennemie. Rien ne vous emp\u00eache de rajouter de nouveaux effets, si vous vous sentez capable de les rajouter dans le code. Les attaques de chaque Pokemon seront enregistr\u00e9es dans l'attribut _liste_attaques sous forme d'une liste de dictionnaires . Par exemple, s'il y a 2 attaques : [{\"nom_attaque\": \"Charge\", \"degats_attaque\": 35}, {\"nom_attaque\": \"Rugissement\", \"effet_attaque\": \"attaque-e\", \"valeur_attaque\": 5}] La premi\u00e8re attaque \"Charge\" a une puissance de 35 . La seconde attaque \"Rugissement\" diminue l'attaque de l'ennemi de 5 points . L'\u00e9tat du pok\u00e9mon sera stock\u00e9e sous la forme d'un dictionnaire . Initialement, l'attribut _etat sera \u00e9gal \u00e0 {\"nom_etat\": \"normal\"} => Cela indique que le pok\u00e9mon est dans son \u00e9tat normal . S'il est empoisonn\u00e9 par exemple, _etat sera \u00e9gal \u00e0 {\"nom_etat\": \"poison\", \"duree_etat\": 3} => Empoisonnement pendant encore 3 tours . (M\u00eame principe pour la paralysie , ou le drainage ). Vous pouvez ajouter de nouveaux pok\u00e9mons dans le fichier pokemons.txt , en respectant bien le format. Vous pouvez cr\u00e9er vos propres pok\u00e9mons ou vous inspirer du pok\u00e9dex : https://www.pokebip.com/pokedex/pokedex_5G_liste_des_pokemon.html","title":"Mod\u00e9lisation"},{"location":"#realisation","text":"Ouvrez le dossier Projet_Pokemon . A l'int\u00e9rieur, vous trouverez des fichiers pr\u00e9-remplis, que vous devrez compl\u00e9ter. Les zones \u00e0 compl\u00e9tez sont marqu\u00e9es par des pointill\u00e9s ......... . Pensez \u00e0 \u00e9crire la docstring de vos fonctions. Certaines fonctions sont d\u00e9j\u00e0 enti\u00e8rement \u00e9crites , et il vous sera dans ce cas demand\u00e9 d' \u00e9crire la docstring pour v\u00e9rifier votre compr\u00e9hension. D'autres fonctions contiennent uniquement la docstring , qui vous aidera \u00e0 \u00e9crire le corps de la fonction. Lisez bien les docstrings et les commentaires pour vous assurer de bien comprendre le fonctionnement du projet !","title":"R\u00e9alisation"},{"location":"#deroulement-du-jeu","text":"Le jeu, d\u00e9fini dans la classe Jeu , se d\u00e9roule ind\u00e9finiment et ne s'arr\u00eate que si : Tous les pok\u00e9mons du jeu sont morts Le nombre de victoires correspond \u00e0 la valeur de la variable globale NB_VICTOIRES Le nombre de d\u00e9faites correspond \u00e0 la valeur de la variable globale NB_DEFAITES Si aucune de ces conditions n'est remplie : On demande au joueur de choisir un pok\u00e9mon parmi les pok\u00e9mons encore vivants du jeu L'adversaire choisit un pok\u00e9mon de mani\u00e8re al\u00e9atoire On lance un combat . A la fin du combat, en cas de victoire, on incr\u00e9mente la valeur du nombre de victoires, en cas de d\u00e9faite, on incr\u00e9mente la valeur du nombre de d\u00e9faites. On recommence le m\u00eame d\u00e9roulement tant qu'aucune des 3 conditions d\u00e9finies pr\u00e9c\u00e9demment n'est remplie.","title":"D\u00e9roulement du jeu"},{"location":"#deroulement-dun-combat","text":"Pour vous aider \u00e0 comprendre, voici une explication du d\u00e9roulement d'un combat (m\u00e9thode jouer de la classe Combat ) : On v\u00e9rifie si le pok\u00e9mon du joueur est mort . Si oui, fin du combat, avec un message de d\u00e9faite. Sinon, on v\u00e9rifie si le pok\u00e9mon de l'ennemi est mort . Si oui, fin du combat, avec message de victoire . Si aucun pok\u00e9mon n'est mort : On affiche les infos sur les pok\u00e9mon (points de vies, \u00e9tat, attaque, d\u00e9fense...) On active les effets relatifs aux alt\u00e9rations d'\u00e9tat. Si c'est au tour du joueur, le joueur choisit une attaque. Si c'est au tour du joueur adversaire, l'attaque est choisie al\u00e9atoirement. A la fin, on incr\u00e9mente le nombre de tours","title":"D\u00e9roulement d'un combat"},{"location":"#questions","text":"Si vous avez des remarques ou des questions, vous pouvez me contacter \u00e0 l'adresse erwan.demerville.etu@univ-lille.fr","title":"Questions ?"}]}